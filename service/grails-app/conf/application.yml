---
server:
    servlet:
        context-path: /CAPAggregator
        use-forward-headers: true
    use-forward-headers: true
    forward-headers-strategy: FRAMEWORK
grails:
    profile: web
    codegen:
        defaultPackage: capcollator
    spring:
        transactionManagement:
            proxies: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false
    jmx:
        unique-names: true
management:
    security:
        enabled: true
    endpoints:
        enabled-by-default: true
        jmx:
            enabled: true
        health:
            enabled: true
            db:
                enabled: true
            defaults:
                enabled: true
            show-details: when-authorized
            show-components: when-authorized
            roles: ROLE_ADMIN,ROLE_USER
        info:
            enabled: true
        configprops:
            enabled: true
        loggers:
            enabled: true
        web:
            exposure:
                include: 'health,info'
---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
        json:
            compileStatic: false
        markup:
            cacheTemplates: true
            autoIndent: true
endpoints:
    jmx:
        unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false

dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.h2.Driver
    username: sa
    password:

environments:
    development:
        dataSource:
            dbCreate: update
            url: jdbc:postgresql://postgres:5432/capcollatordev
            username: capcollator
            password: capcollator
            driverClassName: org.postgresql.Driver
            dialect: org.hibernate.dialect.PostgreSQLDialect
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
    test:
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        dataSource:
            dbCreate: update
            url: "${CC_DB_URL:jdbc:postgresql://postgres:5432/capcollatorprod}"
            username: "${CC_USERNAME:capcollator}"
            password: "${CC_PASSWORD:capcollator}"
            driverClassName: "${CC_JDBC_DRIVER:org.postgresql.Driver}"
            dialect: "${CC_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}"
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
---
gtmcode: none
mapskey: none

# These have all moved to DB config
SystemBaseURL: 'http://demo.semweb.co/CAPCollator'
staticFeedsDir: /tmp/cap
staticFeedsBaseUrl: 'https://s3-eu-west-1.amazonaws.com/alert-feeds'

# We don't usually configure S3 publishing by default.
# awsBucketName: 'cap-alerts'
environments:
    development:
        capcol:
            localFeedSettings: "${user.home}/.grails/localFeedSettings.json"
    test:
        capcol:
            localFeedSettings: "${user.home}/.grails/localFeedSettings.json"
    production:
        capcol:
            localFeedSettings: /localFeedSettings.json

